<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>gs-rest-service</artifactId>
        <groupId>org.springframework</groupId>
        <version>0.1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>WeatherApp</artifactId>
    <dependencies>

        <dependency>

            <groupId>com.h2database</groupId>

            <artifactId>h2</artifactId>

        </dependency>



        <!--        <dependency>-->

        <!--            <groupId>org.springframework.boot</groupId>-->

        <!--            <artifactId>spring-boot-starter</artifactId>-->

        <!--        </dependency>-->



        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>


        <dependency>

            <groupId>io.micrometer</groupId>

            <artifactId>micrometer-registry-prometheus</artifactId>

        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

    </dependencies>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--            <plugin>-->
            <!--                <artifactId>maven-failsafe-plugin</artifactId>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <goals>-->
            <!--                            <goal>integration-test</goal>-->
            <!--                            <goal>verify</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-compiler-plugin</artifactId>-->
            <!--                <configuration>-->

            <!--                    <source>9</source>-->

            <!--                    <target>9</target>-->

            <!--                </configuration>-->

            <!--            </plugin>-->



            <!--            <plugin>-->

            <!--                <groupId>io.fabric8</groupId>-->

            <!--                <artifactId>docker-maven-plugin</artifactId>-->

            <!--                <version>0.33.0</version>-->



            <!--                <configuration>-->

            <!--                    <images>-->

            <!--                        <image>-->

            <!--                            <alias>service</alias>-->

            <!--                            <name>fabric8/docker-demo:${project.version}</name>-->



            <!--                            <build>-->

            <!--                                <from>java:8</from>-->

            <!--                                <assembly>-->

            <!--                                    <descriptor>docker-assembly.xml</descriptor>-->

            <!--                                </assembly>-->

            <!--                                <cmd>-->

            <!--                                    <shell>java -jar </shell>-->

            <!--                                </cmd>-->

            <!--                            </build>-->



            <!--                            <run>-->

            <!--                                <ports>-->

            <!--                                    <port>tomcat.port:8080</port>-->

            <!--                                </ports>-->

            <!--                                <wait>-->

            <!--                                    <http>-->

            <!--                                        <url>http://localhost:${tomcat.port}/access</url>-->

            <!--                                    </http>-->

            <!--                                    <time>10000</time>-->

            <!--                                </wait>-->

            <!--                                <links>-->

            <!--                                    <link>database:db</link>-->

            <!--                                </links>-->

            <!--                            </run>-->

            <!--                        </image>-->



            <!--                        <image>-->

            <!--                            <alias>database</alias>-->

            <!--                            <name>postgres:9</name>-->

            <!--                            <run>-->

            <!--                                <wait>-->

            <!--                                    <log>database system is ready to accept connections</log>-->

            <!--                                    <time>20000</time>-->

            <!--                                </wait>-->

            <!--                            </run>-->

            <!--                        </image>-->

            <!--                    </images>-->

            <!--                </configuration>-->



            <!--                &lt;!&ndash; Connect start/stop to pre- and-->

            <!--                     post-integration-test phase, respectively if you want to start-->

            <!--                     your docker containers during integration tests &ndash;&gt;-->

            <!--                <executions>-->

            <!--                    <execution>-->

            <!--                        <id>start</id>-->

            <!--                        <phase>pre-integration-test</phase>-->

            <!--                        <goals>-->

            <!--                            &lt;!&ndash; "build" should be used to create the images with the-->

            <!--                                 artifact &ndash;&gt;-->

            <!--                            <goal>build</goal>-->

            <!--                            <goal>start</goal>-->

            <!--                        </goals>-->

            <!--                    </execution>-->

            <!--                    <execution>-->

            <!--                        <id>stop</id>-->

            <!--                        <phase>post-integration-test</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>stop</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
        </plugins>
    </build>
</project>